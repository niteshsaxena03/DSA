class Solution {
public:
    int solvemem(vector<int>& arr,int l,int r,vector<vector<int>>&dp,map<pair<int,int>,int>&m){
        //base case
        if(l==r)return 0;
        if(dp[l][r]!=-1)return dp[l][r];
        int ans=INT_MAX;
        for(int i=l;i<r;i++){
           ans=min(ans,(m[{l,i}]*m[{i+1,r}])+solvemem(arr,l,i,dp,m)+solvemem(arr,i+1,r,dp,m));
        }
        return dp[l][r]=ans;
    }

    int mctFromLeafValues(vector<int>& arr) {
        int n=arr.size();
        vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        map<pair<int,int>,int>m;
        int i,j=n;
        for(i = 0; i < n; i++){
            m[{i,i}] = arr[i];
            for(j = i+1; j < n; j++){
                m[{i,j}] = max(m[{i,j-1}],arr[j]);
            }
        }
        return solvemem(arr,0,n-1,dp,m);
    }
};

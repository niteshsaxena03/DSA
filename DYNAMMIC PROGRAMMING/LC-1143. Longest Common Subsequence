class Solution {
public:
    int solvemem(string &text1,string &text2,vector<vector<int>>&dp,int index1,int index2){
        if(index1==text1.size()||index2==text2.size())return 0;

        if(dp[index1][index2]!=-1)return dp[index1][index2];
        
        int ans=0;
        if(text1[index1]==text2[index2])ans=1+solvemem(text1,text2,dp,index1+1,index2+1);
        else{
           int incl=solvemem(text1,text2,dp,index1+1,index2);
           int excl=solvemem(text1,text2,dp,index1,index2+1);
           ans=max(incl,excl);
        }
        return dp[index1][index2]=ans;
    }

    int longestCommonSubsequence(string text1, string text2) {
        int n=text1.size();
        int m=text2.size();
        int index1=0,index2=0;
         
        //checking bigger string
        if(n>m){
            vector<vector<int>>dp(n,vector<int>(m,-1));
            return solvemem(text1,text2,dp,index1,index2);
        }else{
            vector<vector<int>>dp(m,vector<int>(n,-1));
            return solvemem(text2,text1,dp,index2,index1);
        }
    }
};

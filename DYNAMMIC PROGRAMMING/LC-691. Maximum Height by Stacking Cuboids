class Solution {
public:
    int solvemem(vector<vector<int>>& cuboids,vector<vector<int>>&dp,int curr,int prev){
        if(curr==cuboids.size())return 0;
        if(dp[curr][prev+1]!=-1)return dp[curr][prev+1];
        int incl=0;
        if(prev==-1||(cuboids[curr][1]>=cuboids[prev][1])&&(cuboids[curr][2]>=cuboids[prev][2])){
            incl=cuboids[curr][2]+solvemem(cuboids,dp,curr+1,curr);
        }
        int excl=0+solvemem(cuboids,dp,curr+1,prev);
        return dp[curr][prev+1]=max(incl,excl);
    }

    int maxHeight(vector<vector<int>>& cuboids) {
        int n=cuboids.size();
        vector<vector<int>>dp(n,vector<int>(n+1,-1));
        for(auto &a:cuboids)sort(a.begin(),a.end());
        sort(cuboids.begin(),cuboids.end());
        return solvemem(cuboids,dp,0,-1);
    }
};

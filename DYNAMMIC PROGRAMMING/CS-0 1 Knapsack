int solvemem(vector<int> &values, vector<int> &weights, int n, int w,vector<vector<int>>&dp){
  if (n == 0) {
    if (weights[0] <= w)
      return values[0];
    else
      return 0;
  }

   if(dp[n][w]!=-1)return dp[n][w];

   int incl=0;
   if(weights[n]<=w)incl=values[n]+solvemem(values,weights,n-1,w-weights[n],dp);

   int excl=0+solvemem(values,weights,n-1,w,dp);

   return dp[n][w]=max(incl,excl);
}

int maxProfit(vector<int> &values, vector<int> &weights, int n, int w)
{
	vector<vector<int>>dp(n,vector<int>(w+1,-1));
    return solvemem(values,weights,n-1,w,dp);
}

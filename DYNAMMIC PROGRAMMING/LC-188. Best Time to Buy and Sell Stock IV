class Solution {
public:
    int solvemem(vector<int>& prices,vector<vector<vector<int>>>&dp,int index,int buy,int count,int k){
        if(index==prices.size()||count==k)return 0;
        if(dp[index][buy][count]!=-1)return dp[index][buy][count];
        int ans=0;
        if(buy){
            int incl=-prices[index]+solvemem(prices,dp,index+1,0,count,k);
            int excl=0+solvemem(prices,dp,index+1,1,count,k);
            ans=max(incl,excl);
        }else{
            int inc=prices[index]+solvemem(prices,dp,index+1,1,count+1,k);
            int exc=0+solvemem(prices,dp,index+1,0,count,k);
            ans=max(inc,exc);
        }
        return dp[index][buy][count]=ans;
    }

    int maxProfit(int k, vector<int>& prices) {
        int n=prices.size();
        vector<vector<vector<int>>>dp(n,vector<vector<int>>(2,vector<int>(k+1,-1)));
        return solvemem(prices,dp,0,1,0,k);
    }
};

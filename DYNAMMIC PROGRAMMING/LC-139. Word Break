class Solution {
private:
    bool solve(string s, unordered_set<string> &set, vector<int> &dp, int index){
        if(index == s.size()){
            return true;
        }
        if(dp[index] != -1){
            return dp[index];
        }
        for(int i=index; i<s.size(); i++){
            if(set.count(s.substr(index, i+1-index)) && solve(s, set,dp, i+1)){
                dp[index] = true;
                return true;
            }
        }
        return dp[index] = false;
    }
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        vector<int>dp(s.size(), -1);
        unordered_set<string> set(wordDict.begin(), wordDict.end());
        return solve(s, set,dp, 0);
    }
};

class Solution {
private:
    vector<int>prefixProduct(vector<int>& nums){
        vector<int>prefix(nums.size());
        prefix[0]=1;
        for(int i=1;i<nums.size();i++){
            prefix[i]=prefix[i-1]*nums[i-1];
        }
        return prefix;
    }
    vector<int>suffixProduct(vector<int>& nums){
        vector<int>suffix(nums.size());
        suffix[nums.size()-1]=1;
        for(int i=nums.size()-2;i>=0;i--){
            suffix[i]=suffix[i+1]*nums[i+1];
        }
        return suffix;
    }
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int>ans(nums.size());
        vector<int>prefixArray=prefixProduct(nums);
        vector<int>suffixArray=suffixProduct(nums);
        
        for(int i=0;i<nums.size();i++){
            int temp=prefixArray[i]*suffixArray[i];
            ans[i]=temp;
        }
        return ans;
    }
};

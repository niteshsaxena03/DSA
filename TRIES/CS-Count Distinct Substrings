class TrieNode{
  private:
    TrieNode* links[26];

  public:

    bool contains(char ch){
        return links[ch-'a'];
    }
    void put(char ch,TrieNode* node){
        links[ch-'a']=node;
    }
    TrieNode* get(char ch){
        return links[ch-'a'];
    }
};

int countDistinctSubstrings(string &s)
{
    int count=0;
    TrieNode* root=new TrieNode();

    for(int i=0;i<s.size();i++){
        TrieNode* node=root;
        for(int j=i;j<s.size();j++){
            if(!(node->contains(s[j]))){
                count++;
                node->put(s[j],new TrieNode());
            }
           node=node->get(s[j]);
           
        }
    }
    return count+1;
}

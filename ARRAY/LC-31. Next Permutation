class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int index=INT_MAX-100;
        int n=nums.size();
        //finding index which curve dips down
        for(int i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                index=i;
                break;
            }
        }
        //if found nothing-->descending order
        if(index==INT_MAX-100){
            reverse(nums.begin(),nums.end());
            return;
        }

        //swapping the index with a just greater element
        for(int i=n-1;i>=index;i--){
            if(nums[i]>nums[index]){
                swap(nums[i],nums[index]);
                break;
            }
        
        }
        //reversing the right half to get the just greater permutation
        reverse(nums.begin()+index+1,nums.end());
    }
};

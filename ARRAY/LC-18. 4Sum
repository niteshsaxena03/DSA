class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>ans;
        int n=nums.size();
        //sorting whole array
        sort(nums.begin(),nums.end());
        //first loop
        for(int i=0;i<n;i++){
            //skipping all duplicates
            if(i>0 && nums[i]==nums[i-1])continue;
            //second loop
            for(int j=i+1;j<n;j++){
                //skipping duplicate elements
                if(j>i+1 && nums[j]==nums[j-1])continue;
                //specifying the other 2 pointers
                int k=j+1,l=n-1;
                while(k<l){
                    //adding seperately to avoid integer overflow
                    long long sum=nums[i];
                    sum+=nums[j];
                    sum+=nums[k];
                    sum+=nums[l];
                    if(sum==target){
                        vector<int>temp={nums[i],nums[j],nums[k],nums[l]};
                        ans.push_back(temp);
                        k++,l--;
                        //skipping all duplicates
                        while(k<l &&nums[k]==nums[k-1])k++;
                        while(k<l && nums[l]==nums[l+1])l--;
                    }
                    else if(sum<target)k++;
                    else l--;
                }
            }
        }
        return ans;
    }
};

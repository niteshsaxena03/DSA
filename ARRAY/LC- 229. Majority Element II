class Solution {
public:
    //boyre-moore algo
    vector<int> majorityElement(vector<int>& nums) {
        int count1=0,count2=0;
        int num1=-1,num2=-1;
        for(int i=0;i<nums.size();i++){
            if(count1==0 && nums[i]!=num2){
                num1=nums[i];
                count1=1;
            }
            else if(count2==0 && nums[i]!=num1){
                num2=nums[i];
                count2=1;
            }
            else if(num1==nums[i])count1++;
            else if(num2==nums[i])count2++;
            else{
                count1--;
                count2--;
            }
        }
        vector<int>ans;
        count1=0,count2=0;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==num1)count1++;
            else if(nums[i]==num2)count2++;
        }
        if(count1>nums.size()/3)ans.push_back(num1);
        if(count2>nums.size()/3)ans.push_back(num2);
        return ans;
    }
};

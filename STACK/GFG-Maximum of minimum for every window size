class Solution
{
    public:
    //Function to find maximum of minimums of every window size.
   vector<int> prevsmaller(int arr[], int n) {
     vector<int> prev(n);
     stack<int> s;
     for (int i = 0; i < n; i++) {
        while (!s.empty() && arr[i] <= arr[s.top()])s.pop();
           
        prev[i] = (s.empty()) ? -1 : s.top();
        s.push(i);
     }
     return prev;
}

vector<int> nextsmaller(int arr[], int n) {
    vector<int> next(n);
    stack<int> s;
    for (int i = n - 1; i >= 0; i--) {
        while (!s.empty() && arr[i] <= arr[s.top()])s.pop();
       
        next[i] = (s.empty()) ? n : s.top();
        s.push(i);
    }
    return next;
}

vector<int> maxOfMin(int arr[], int n) {
    vector<int> prev, next;
    prev = prevsmaller(arr, n);
    next = nextsmaller(arr, n);
    vector<int> ans(n, -1);
    for (int i = 0; i < n; i++) {
        int index = next[i] - prev[i] - 2;
        ans[index] = max(ans[index], arr[i]);
    }
     for(int i=n-2; i>=0; i--)
        {
            ans[i] = max(ans[i], ans[i+1]);
        }
    return ans;
}

};

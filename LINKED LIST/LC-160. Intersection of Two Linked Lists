class Solution {
public:
    int len(ListNode* root){
        int count=1;
        while(root!=NULL){
            count++;
            root=root->next;
        }
        return count;
    }
    
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int a=len(headA);
        int b=len(headB);
        int c=(a>b)?a-b:b-a;
        ListNode* p1=headA;
        ListNode* p2=headB;
        
        if(a>b){
            int k=0;
            while(k<c){
                if(p1==p2)return p1;
                if(p1->next!=NULL)p1=p1->next;
                k++;
            }
        }
        else{
            int j=0;
            while(j<c){
                if(p2==p1)return p2;
                if(p2->next!=NULL)p2=p2->next;
                j++;
            }
        }
        while(p1!=NULL && p2!=NULL){
            if(p1==p2)return p1;
            p1=p1->next;
            p2=p2->next;
        }
        return NULL;
    }
};

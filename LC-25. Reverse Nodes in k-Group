class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
      if(head==NULL)return NULL;
      ListNode* curr=head;
      ListNode* prev=NULL;
      ListNode* forward=NULL;
      int count=0;

       ListNode* cursor = head;
        for(int i = 0; i < k; i++){
         if(cursor == nullptr) 
             return head;
         cursor = cursor->next;
    }

      while(curr!=NULL && count<k){
          forward=curr->next;
          curr->next=prev;
          prev=curr;
          curr=forward;
          count++;
      } 
      if(forward!=NULL)head->next=reverseKGroup(forward,k);

      return prev; 
    }
};

#include <bits/stdc++.h> 
#include<queue>

class node{
    public:
    int data;
    int row;
    int col;
   
    node(int data,int row,int col){
        this->data=data;
        this->row=row;
        this->col=col;
    }
};

class compare{
    public:
    bool operator()(node* a,node* b){
        return a->data>b->data;
    }
};

vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    
  priority_queue<node*,vector<node*>,compare>pq;

  vector<int>ans;

  for(int i=0;i<k;i++){
      node* temp=new node(kArrays[i][0],i,0);
      pq.push(temp);
  }

  while(!pq.empty()){
      node* top=pq.top();
      pq.pop();

      ans.push_back(top->data);

      int col=top->col;
      int row=top->row;

      if(col+1<kArrays[row].size()){
          node* newnode=new node(kArrays[row][col+1],row,col+1);
          pq.push(newnode);
      }
  }
  return ans;
}

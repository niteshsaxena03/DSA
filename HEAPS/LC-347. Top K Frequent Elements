class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>mapi;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>minheap;
        vector<int>ans;

        //creating a map of elements
        for(int i=0;i<nums.size();i++){
            mapi[nums[i]]++;
        }
        //putting into maxheap
        for(auto i:mapi){
            minheap.push({i.second,i.first});
            if(minheap.size()>k)minheap.pop();
        }
        for(int i=0;i<k;i++){
            pair<int,int>p=minheap.top();
            minheap.pop();
            
            ans.push_back(p.second);
        }
        return ans;
    }
};

class Solution{
public:
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        //using pq for storing weight and node
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        vector<int>vis(V,0);
        pq.push({0,0});
        int sum=0;
        
        while(!pq.empty()){
            auto top=pq.top();
            pq.pop();
            
            int weight=top.first;
            int node=top.second;
            
            if(vis[node]==1)continue;
            //otherwise add it to mst
            vis[node]=1;
            sum+=weight;
            
            for(auto i:adj[node]){
                int adjNode=i[0];
                int adjWeight=i[1];
                if(!vis[adjNode])pq.push({adjWeight,adjNode});
            }
        }
        return sum;
    }
};

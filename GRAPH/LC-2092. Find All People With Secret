class Solution {
public:
    vector<int> findAllPeople(int n, vector<vector<int>>& meetings, int firstPerson) {
        //preparing adjlist of people,time
         vector<pair<int,int>> adj[n];
         for (auto i : meetings) {
           adj[i[0]].push_back({i[1],i[2]});
           adj[i[1]].push_back({i[0],i[2]});
        }
        //making priority queue as we need meetings in sorted order of time
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        pq.push({0,0});
        pq.push({0,firstPerson});

        vector<int>vis(n,0);//for tracking who has visited person with secret
        //doing bfs traversal
        while(!pq.empty()){
            auto top=pq.top();
            int time=top.first;
            int person=top.second;
            pq.pop();

            if(vis[person])continue;

            vis[person]=true;

            for(auto i:adj[person]){
                if(!vis[i.first] && i.second>=time)pq.push({i.second,i.first});
            }
        }
        vector<int>ans;
        for(int i=0;i<n;i++){
            if(vis[i])ans.push_back(i);
        }
        return ans;
    }
};

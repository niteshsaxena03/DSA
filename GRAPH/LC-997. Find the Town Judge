class Solution {
private:
    bool canJudge(vector<vector<int>>&trust,int n) {
        for(int i=0;i<trust.size();i++){
            if(trust[i][0]==n)return false;
        }
        return true;
    } 
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        if(n==1)return 1;
        
        unordered_map<int,int>m;
        for(int i=0;i<trust.size();i++){
            m[trust[i][1]]++;
        }
        for(auto i:m){
            if(i.second==n-1 && canJudge(trust,i.first))return i.first;
        } 
        return -1;
    }
};

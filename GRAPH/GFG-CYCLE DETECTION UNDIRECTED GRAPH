class Solution {
  public:
  
    bool bfs(int index, vector<int>&vis,vector<int> adj[]){
        vis[index]=1;
        queue<pair<int,int>>q;
        q.push({index,-1});
        
        while(!q.empty()){
            int node=q.front().first;
            int parent=q.front().second;
            q.pop();
            for(auto i:adj[node]){
             if(!vis[i]){
                    vis[i]=1;
                    q.push({i,node});
                    
                }
                
                else if(parent!=i){
                    return true;
                }
        }
        }
        return false;
    }
  
    bool isCycle(int V, vector<int> adj[]) {
        vector<int>vis(V,0);
        
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(bfs(i,vis,adj))return true;
            }
        }
        return false;
    }
};

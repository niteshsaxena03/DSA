#include <bits/stdc++.h> 
#include<unordered_map>
#include<list>
#include<vector>
#include<limits.h>


vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    //creating adjlist
    unordered_map<int,list<pair<int,int>>>adj;
    for(int i=0;i<g.size();i++){
        int u=g[i].first.first;
        int v=g[i].first.second;
        int w=g[i].second;

        adj[u].push_back({v,w});
        adj[v].push_back({u,w});
    }
    vector<pair<pair<int, int>, int>>result;
    vector<int>key(n+1);
    vector<int>vis(n+1);
    vector<int>parent(n+1);
    //initializing all three vectors

    for(int i=0;i<=n;i++){
        key[i]=INT_MAX;
        parent[i]=-1;
        vis[i]=false;
    }
    parent[1]=-1;
    key[1]=0;
    //traversal

    for(int i=1;i<n;i++){
        int mini=INT_MAX;
        int u;

        for(int v=1;v<=n;v++){
            if(vis[v]==false && key[v]<mini){
                mini=key[v];//new mini
                u=v;
            }
        }
        vis[u]=true;
        //checking adjacent node
        for(auto i:adj[u]){
            int v=i.first;
            int w=i.second;

            if(vis[v]==false && w<key[v]){
                key[v]=w;
                parent[v]=u;
            }
        }
    }
    for(int i=2;i<=n;i++){
      result.push_back(
          {{parent[i],i},key[i]});
    }
    return result;
}

pair<int, int> predecessorSuccessor(TreeNode *root, int key)
{
  int pre=-1;
  int succ=-1;
  TreeNode *curr=root;

  while(curr!=NULL && curr->data!=key){
    if (curr->data > key) {
      succ=curr->data;
      curr = curr->left;
    } else{
        pre=curr->data;
        curr = curr->right; 
    }
  }  
  if(curr){
  //for getting predecessor
  TreeNode* leftNode=curr->left;
  while (leftNode != NULL) {
      pre = leftNode->data;
      leftNode = leftNode->right;
  }
  //for getting successor
  TreeNode* rightNode=curr->right;
  while (rightNode != NULL) {
      succ = rightNode->data;
      rightNode = rightNode->left;
  }
  }
  return {pre,succ};
}
